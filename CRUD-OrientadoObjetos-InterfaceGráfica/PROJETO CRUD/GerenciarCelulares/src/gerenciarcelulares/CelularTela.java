/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciarcelulares;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import modelo.Celular;

/**
 *
 * @author Secretaria
 */
public class CelularTela extends javax.swing.JFrame {

    /**
     * Creates new form CelularTela
     */
    //Criando a lista que mantem os dados da tela
    List<Celular> lista = new ArrayList<Celular>();

    //Variavel que controla a navegação dentro da lista 
    Integer posicaoLista = null;

    public CelularTela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPrimeiro = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnConsultar = new javax.swing.JButton();
        btnInserir = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNumeroDeSerie = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        cboMarca = new javax.swing.JComboBox<>();
        cboSistemaOperacional = new javax.swing.JComboBox<>();
        txtPreco = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Celulares");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Navegação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 24), new java.awt.Color(204, 0, 0))); // NOI18N

        btnPrimeiro.setText("Primeiro");
        btnPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroActionPerformed(evt);
            }
        });

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnProximo.setText("Próximo");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        btnUltimo.setText("Último");
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnPrimeiro)
                .addGap(18, 18, 18)
                .addComponent(btnAnterior)
                .addGap(18, 18, 18)
                .addComponent(btnProximo)
                .addGap(18, 18, 18)
                .addComponent(btnUltimo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrimeiro)
                    .addComponent(btnAnterior)
                    .addComponent(btnProximo)
                    .addComponent(btnUltimo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(204, 0, 0))); // NOI18N

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnConsultar)
                .addGap(18, 18, 18)
                .addComponent(btnInserir)
                .addGap(18, 18, 18)
                .addComponent(btnAtualizar)
                .addGap(18, 18, 18)
                .addComponent(btnRemover)
                .addGap(18, 18, 18)
                .addComponent(btnLimpar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnInserir)
                    .addComponent(btnAtualizar)
                    .addComponent(btnRemover)
                    .addComponent(btnLimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Código:");

        jLabel2.setText("Número de Série:");

        jLabel3.setText("Descrição:");

        jLabel4.setText("Marca:");

        jLabel5.setText("Sistema Operacional:");

        jLabel6.setText("Preço:");

        txtCodigo.setEditable(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        cboMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apple", "Samsung", "Nokia", "Motorola", " " }));

        cboSistemaOperacional.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Android", "IOS", "Windows" }));
        cboSistemaOperacional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSistemaOperacionalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDescricao)
                            .addComponent(cboMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboSistemaOperacional, 0, 200, Short.MAX_VALUE)
                            .addComponent(txtPreco)
                            .addComponent(txtNumeroDeSerie)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroDeSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboSistemaOperacional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboSistemaOperacionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSistemaOperacionalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSistemaOperacionalActionPerformed

    public void limparDados() {
        txtCodigo.setText("");
        txtDescricao.setText("");
        txtNumeroDeSerie.setText("");
        txtPreco.setText("");
        cboMarca.setSelectedIndex(-1);
        cboSistemaOperacional.setSelectedIndex(-1);
    }


    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        // TODO add your handling code here:

        //Instanciar a minha variavel do tipo Celular
        Celular objCelular = new Celular();

        //Vai gerar o código automaticamento referente ao tamanho da minha lista
        //Para não aparecer o início da lista vazia como ZERO se acrescenta um (1)        
        objCelular.setCodigo(lista.size() + 1);

        objCelular.setDescricao(txtDescricao.getText());
        objCelular.setNumeroSerie(txtNumeroDeSerie.getText());
        objCelular.setPreco(Double.parseDouble(txtPreco.getText()));
        objCelular.setMarca(cboMarca.getSelectedItem().toString());
        objCelular.setSo(cboSistemaOperacional.getSelectedItem().toString());

        //Adiciona o objeto objCelular na lista
        lista.add(objCelular);

        //Retorna uma mensagem dizendo que os dados foram inseridos com sucesso
        JOptionPane.showMessageDialog(null, "Celular inserido com sucesso.");

        //Método que limpa todos os campos do formulário apos a inserção do Celular
        limparDados();
    }//GEN-LAST:event_btnInserirActionPerformed

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:

        //Mensagem para o usuário fazer a pesquisa
        String filtro = JOptionPane.showInputDialog("Digite a descrição do aparelho de celular que deseja pesquisar");

        //para garantir a busca e a parada caso ache o elemento na lista
        Boolean achou = false;

        //Variavel contador para que quando for feito a naveção na lista 
        //com o botão Anterior e Próximo seja possível navegar em cada elemento
        //da lista. Sem esta variável teríamos que atualizar a lista toda ver que 
        //fôssemos navegar pelos botões Anterior e Próximo ou teríamos que nos deslocar
        //para o Primeiro ou Último elemento da lista.
        int contador = 0;

        //For para percorrer a base da dados e pesquisar os elementos da lista
        for (Celular celular : lista) {
            //Testa se o que está sendo filtrado pela descrição do
            //celular existe na lista
            if (filtro.equals(celular.getDescricao())) {
                txtCodigo.setText(celular.getCodigo().toString());
                txtDescricao.setText(celular.getDescricao());
                txtNumeroDeSerie.setText(celular.getNumeroSerie());
                txtPreco.setText(celular.getPreco().toString());
                cboMarca.setSelectedItem(celular.getMarca());
                cboSistemaOperacional.setSelectedItem(celular.getSo());

                achou = true;

                //A variável posicaoLista recebe o valor da variável contador
                //para que possa ser feita a navegação na lista a partir da posição
                //que se encontra o contador.
                posicaoLista = contador;

                //Caso seja encontrado o elemento na lista tem que parar a busca do for
                break;
            }

            //Para cada deslocamento se incrementa o contador
            contador++;
        }

        //Caso não tenha o celular na lista retornar uma mensagem para o usuário
        //dizendo que não tem o elemento na lista
        if (!achou) {
            JOptionPane.showMessageDialog(null, "Aparelho de celular não encontrado");
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:

        //percorrer a lista para localizar o código do elemento a ser removido
        for (Celular celular : lista) {
            //Quando for testar se o elemento existe e for igual ao procurado
            //temos que pegar o código e transformar em texto com o metodo toString()
            //e depois utilizar o método equals para comparar com a variavel txtCodigo
            if (celular.getCodigo().toString().equals(txtCodigo.getText())) {
                //Caso o elemento exista na lista utilizar o método remove()
                lista.remove(celular);

                //Disparar uma mensagem para o usuário de dizendo que 
                //o elemento foi removido da lista
                JOptionPane.showMessageDialog(null, "O elemento celular foi removido com sucesso");

                //Após atualizar o elemento da lista temos que limpar os campos do formulario
                limparDados();

                //Caso seja encontrado o elemento na lista tem que parar a busca do for
                break;
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
     
        for (Celular celular : lista) {
            //Quando for testar se o elemento existe e for igual ao procurado
            //temos que pegar o código e transformar em texto com o metodo toString()
            //e depois utilizar o método equals para comparar com a variavel txtCodigo
            if (celular.getCodigo().toString().equals(txtCodigo.getText())) {

                celular.setDescricao(txtDescricao.getText());
                celular.setNumeroSerie(txtNumeroDeSerie.getText());
                celular.setPreco(Double.parseDouble(txtPreco.getText()));
                celular.setMarca(cboMarca.getSelectedItem().toString());
                celular.setSo(cboSistemaOperacional.getSelectedItem().toString());

                //Disparar uma mensagem para o usuário de dizendo que 
                //o elemento foi atualizado na lista
                JOptionPane.showMessageDialog(null, "O elemento celular foi atualizado com sucesso");

                //Após remover o elemento da lista temos que limpar os campos do formulario
                limparDados();

                //Caso seja encontrado o elemento na lista tem que parar a busca do for
                break;
            }
        }


    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:        

        limparDados();

    }//GEN-LAST:event_btnLimparActionPerformed

    //Botões de navegação dentro da Lista
    //Botao Primeiro
    private void btnPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroActionPerformed
        
        if (lista.isEmpty() == false) {

        
            posicaoLista = 0;

       
            Celular celular = lista.get(posicaoLista);

            txtCodigo.setText(celular.getCodigo().toString());
            txtDescricao.setText(celular.getDescricao());
            txtNumeroDeSerie.setText(celular.getNumeroSerie());
            txtPreco.setText(celular.getPreco().toString());
            cboMarca.setSelectedItem(celular.getMarca());
            cboSistemaOperacional.setSelectedItem(celular.getSo());
        } else {
            
            JOptionPane.showMessageDialog(null, "O elemento celular não foi encontrado,\n "
                    + "verifique se a lista está vazia");
        }
    }//GEN-LAST:event_btnPrimeiroActionPerformed

    //Botao Último
    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed

        if (lista.isEmpty() == false) {

            posicaoLista = lista.size() - 1;

            Celular celular = lista.get(posicaoLista);

            txtCodigo.setText(celular.getCodigo().toString());
            txtDescricao.setText(celular.getDescricao());
            txtNumeroDeSerie.setText(celular.getNumeroSerie());
            txtPreco.setText(celular.getPreco().toString());
            cboMarca.setSelectedItem(celular.getMarca());
            cboSistemaOperacional.setSelectedItem(celular.getSo());
        } else {
          
            JOptionPane.showMessageDialog(null, "O elemento celular não foi encontrado,\n "
                    + "verifique se a lista está vazia");
        }
    }//GEN-LAST:event_btnUltimoActionPerformed

    //Botao Anterior
    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        // TODO add your handling code here:

        //Testa se a lista está vazia
        if (lista.isEmpty() == false) {

            //Testa se a posição em que estamos consultanto é maior que ZERO
            //assim caso estejamos consultano o primeiro elemento da lista 
            //teremos o retorno do elemento, caso contrario a lista estará vazia
            if (posicaoLista > 0) {
                posicaoLista = posicaoLista - 1;

                //Busca o elemento Celular na lista
                Celular celular = lista.get(posicaoLista);

                txtCodigo.setText(celular.getCodigo().toString());
                txtDescricao.setText(celular.getDescricao());
                txtNumeroDeSerie.setText(celular.getNumeroSerie());
                txtPreco.setText(celular.getPreco().toString());
                cboMarca.setSelectedItem(celular.getMarca());
                cboSistemaOperacional.setSelectedItem(celular.getSo());
            }
        } else {
            //Disparar uma mensagem para o usuário de dizendo que 
            //o elemento não foi encontrado na lista ou a lista está vazia
            JOptionPane.showMessageDialog(null, "O elemento celular não foi encontrado,\n "
                    + "verifique se a lista está vazia");
        }

        if (posicaoLista == 0) {
            //Disparar uma mensagem para o usuário de dizendo que 
            //o elemento não foi encontrado na lista ou a lista está vazia
            JOptionPane.showMessageDialog(null, "Chegou no início da lista");
        }
    }//GEN-LAST:event_btnAnteriorActionPerformed

    //Botão Próximo
    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        // TODO add your handling code here:

        //Testa se a lista está vazia
        if (lista.isEmpty() == false) {

            //Testa se estamos na última posição da lista evitando acessar
            //uma posição fora do vetor
            if (posicaoLista != lista.size() - 1) {
                posicaoLista = posicaoLista + 1;

                //Busca o elemento Celular na lista
                Celular celular = lista.get(posicaoLista);

                txtCodigo.setText(celular.getCodigo().toString());
                txtDescricao.setText(celular.getDescricao());
                txtNumeroDeSerie.setText(celular.getNumeroSerie());
                txtPreco.setText(celular.getPreco().toString());
                cboMarca.setSelectedItem(celular.getMarca());
                cboSistemaOperacional.setSelectedItem(celular.getSo());
            }
        } else {
            //Disparar uma mensagem para o usuário de dizendo que 
            //o elemento não foi encontrado na lista ou a lista está vazia
            JOptionPane.showMessageDialog(null, "O elemento celular não foi encontrado,\n "
                    + "verifique se a lista está vazia");
        }
        if (posicaoLista == lista.size()-1) {
            //Disparar uma mensagem para o usuário de dizendo que 
            //o elemento não foi encontrado na lista ou a lista está vazia
            JOptionPane.showMessageDialog(null, "Chegou no final da lista");
        }
    }//GEN-LAST:event_btnProximoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CelularTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CelularTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CelularTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CelularTela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CelularTela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPrimeiro;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JComboBox<String> cboMarca;
    private javax.swing.JComboBox<String> cboSistemaOperacional;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNumeroDeSerie;
    private javax.swing.JTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}


